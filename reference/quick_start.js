#!/usr/bin/env node

// quick_start.js
// –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π

const CollectionManager = require('./collection_manager');
const collectionsConfig = require('./collections_config');

async function quickStart() {
  console.log("\nüöÄ === –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢ –°–ò–°–¢–ï–ú–´ –ö–û–õ–õ–ï–ö–¶–ò–ô ===\n");
  
  const manager = new CollectionManager();
  
  try {
    // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    console.log("üìÅ –≠—Ç–∞–ø 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫...");
    await manager.initializeStructure();
    console.log("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ —Å–æ–∑–¥–∞–Ω–∞!\n");
    
    // 2. –ü–æ–∫–∞–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π
    console.log("üìã –≠—Ç–∞–ø 2: –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:");
    const collections = collectionsConfig.getAvailableCollections();
    collections.forEach((collection, index) => {
      console.log(`   ${index + 1}. ${collection.name} (${collection.id})`);
      console.log(`      –û–ø–∏—Å–∞–Ω–∏–µ: ${collection.description}`);
    });
    console.log("");
    
    // 3. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–µ—Ä–≤–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    console.log("‚öôÔ∏è  –≠—Ç–∞–ø 3: –ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:");
    const exampleConfig = collectionsConfig.getCollectionConfig('pe_stickers');
    console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${exampleConfig.name}`);
    console.log(`   –°–∏–º–≤–æ–ª: ${exampleConfig.collectionSymbol}`);
    console.log(`   –ö–æ–ø–∏–π –Ω–∞ NFT: ${exampleConfig.copiesPerNft}`);
    console.log(`   –†–æ—è–ª—Ç–∏: ${exampleConfig.sellerFeeBasisPoints / 100}%`);
    console.log(`   –ü–æ–ª—É—á–∞—Ç–µ–ª—å: ${exampleConfig.receiverAddress}`);
    console.log(`   –¢–∏–ø –ø–æ–¥–ø–∏—Å–∏: ${exampleConfig.signerConfig.type}`);
    console.log("");
    
    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π
    console.log("üìä –≠—Ç–∞–ø 4: –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–ª–ª–µ–∫—Ü–∏–π:");
    const status = await manager.getCollectionsStatus();
    
    console.log("\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê");
    console.log("‚îÇ –ö–æ–ª–ª–µ–∫—Ü–∏—è               ‚îÇ –°–æ–∑–¥–∞–Ω–∞ ‚îÇ –î–µ—Ä–µ–≤–æ ‚îÇ –ê–∫—Ç–∏–≤–Ω—ã–π –±–∞—Ç—á‚îÇ");
    console.log("‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§");
    
    status.forEach(collection => {
      const created = collection.collectionExists ? "‚úÖ" : "‚ùå";
      const tree = collection.treeExists ? "‚úÖ" : "‚ùå"; 
      const batch = collection.hasActiveBatch ? "üîÑ" : "‚ö™";
      
      const name = collection.name.length > 23 ? collection.name.substring(0, 20) + "..." : collection.name;
      console.log(`‚îÇ ${name.padEnd(23)} ‚îÇ ${created.padEnd(6)} ‚îÇ ${tree.padEnd(5)} ‚îÇ ${batch.padEnd(12)} ‚îÇ`);
    });
    console.log("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò");
    
    console.log("\n–õ–µ–≥–µ–Ω–¥–∞:");
    console.log("‚úÖ - –ì–æ—Ç–æ–≤–æ  ‚ùå - –ù–µ —Å–æ–∑–¥–∞–Ω–æ  üîÑ - –ê–∫—Ç–∏–≤–Ω—ã–π –±–∞—Ç—á  ‚ö™ - –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ");
    
    // 5. –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
    console.log("\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:");
    console.log("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–µ .env");
    console.log("2. –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–π: node multi_collection_cli.js");
    console.log("3. –ü–æ–º–µ—Å—Ç–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∞–ø–∫–∏ collections/{id}/input_images/");
    console.log("4. –°–æ–∑–¥–∞–π—Ç–µ –¥–µ—Ä–µ–≤–æ –ú–µ—Ä–∫–ª–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏");
    console.log("5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–Ω—Ç–∏–Ω–≥ —á–µ—Ä–µ–∑ CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å");
    
    console.log("\nüìñ –ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ MULTI_COLLECTION_GUIDE.md");
    
    // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env
    console.log("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:");
    const envChecks = [
      { name: 'PRIVATE_KEY', required: true },
      { name: 'CATS_PRIVATE_KEY', required: false },
      { name: 'PIXEL_PRIVATE_KEY', required: false },
      { name: 'MAIN_RPC_URL', required: false },
    ];
    
    envChecks.forEach(check => {
      const exists = !!process.env[check.name];
      const status = exists ? "‚úÖ" : (check.required ? "‚ùå" : "‚ö†Ô∏è");
      const suffix = check.required ? " (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è)" : " (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è)";
      console.log(`   ${status} ${check.name}${suffix}`);
    });
    
    if (!process.env.PRIVATE_KEY) {
      console.log("\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è PRIVATE_KEY!");
      console.log("   –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á");
      console.log("   –ü—Ä–∏–º–µ—Ä: PRIVATE_KEY=–≤–∞—à_base58_–∫–ª—é—á");
    }
    
  } catch (error) {
    console.error("\n‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:", error.message);
    console.log("\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:");
    console.log("1. –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–ø–∫–∞–º");
    console.log("2. –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏");
    console.log("3. –ù–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π");
  }
  
  console.log("\nüé® === –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢ –ó–ê–í–ï–†–®–ï–ù ===");
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  quickStart().catch(error => {
    console.error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error);
    process.exit(1);
  });
}

module.exports = quickStart; 